{"version":3,"sources":["../config/passportStrategy.js"],"names":["env","process","node_env","passportStrat","User","serializeUser","user","done","console","log","id","deserializeUser","findOne","where","createUser","username","email","password","create","generateHash","then","getUserWithEmail","use","usernameField","passwordField","passReqToCallback","req","body","validPassword"],"mappings":"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","file":"passportStrategy.js","sourcesContent":["// Load local login strategy for passport\r\nimport LocalStrategy from 'passport-local';\r\nimport passport from 'passport';\r\n\r\nconst env = process.env.node_env;\r\n\r\nexport let passportStrat = async function(User){\r\n    /*****setup for persistent login sessions for passport******/\r\n    passport.serializeUser((user, done) => {\r\n        env === 'debug' ? console.log(\"!!!!!!!!   SERIALIZING  !!!!!!!!!!\") : null;\r\n        return done(null, user.id);\r\n    });\r\n\r\n    passport.deserializeUser(async (id, done) => {    \r\n        env === 'debug' ? console.log(\"!!!!!!!!   DESERIALIZING   !!!!!!!!!!\") : null;\r\n        const user = await User.findOne({\r\n            where: { id : id }\r\n            })\r\n        return done(null, user);\r\n    });\r\n    /**************************************************/\r\n\r\n    /************** Helper Functions ******************/\r\n    const createUser = async (username, email, password) => {\r\n        const user = await User.create({\r\n                        username: username,\r\n                        email: email,\r\n                        password: User.generateHash(password)\r\n                     }).then( user => {return user});\r\n        return user;\r\n            \r\n    };\r\n\r\n    const getUserWithEmail =  async (email) => {\r\n        const user = await User.findOne({\r\n            where: {email : email }\r\n        })\r\n        return user;\r\n    }   \r\n    /**************************************************/\r\n\r\n    /***********Passport Strategy Local-Join************/\r\n    passport.use('local-join', new LocalStrategy({\r\n        usernameField : 'email',\r\n        passwordField : 'password',\r\n        passReqToCallback : true\r\n    },\r\n    (req, email, password, done) => {     \r\n        // get user with given email. If user already exists return false  \r\n        getUserWithEmail(email)\r\n            .then(user => {\r\n                env == 'debug' ? console.log(\"Passport local-join\",user): null;  \r\n                if (user) {\r\n                    console.log(\"User already Exists\");\r\n                    return done(null, false);    \r\n                }    \r\n\r\n                // else create and return user                    \r\n                createUser(req.body.username, email, req.body.password)\r\n                    .then(user => {          \r\n                        console.log(\"User added!\");                    \r\n                        return done(null, user);   \r\n                    });       \r\n        });      \r\n\r\n    }));\r\n    /****************************************************/\r\n\r\n    /***********Passport Strategy Local-Login************/\r\n    // Logins in the user\r\n    passport.use('local-login', new LocalStrategy({\r\n        usernameField : 'email',\r\n        passwordField: 'password',\r\n        passReqToCallback : true\r\n    },\r\n    (req, email, password, done) => {   \r\n            getUserWithEmail(email)\r\n                .then(user => {\r\n                    if( env === 'debug'){\r\n                        console.log(\"Getting user with email:\",email);\r\n                        console.log('Login user object',user);\r\n                    }\r\n                    if (!user){\r\n                        return done(null, false);\r\n                    }                             \r\n                            \r\n                    if (!User.validPassword(password, user.password)){\r\n                        console.log(\"Password is not valid\");\r\n                        return done(null, false);    \r\n                    }\r\n                    return done(null, user);          \r\n                        \r\n                });\r\n            \r\n    }));\r\n    return passport;\r\n}"]}